                Constrained RAndom Verification Enviroment - CRAVE
            For feedback and bug reports: crave@informatik.uni-bremen.de
                =================================================

I) Build and install CRAVE
  1) Call 'make' to build CRAVE, you need cmake the dependencies should
     automatically download and build. 
  2) Call 'make test', all tests should pass.
  3) Call 'make install'.

II) Examples
  After installing CRAVE go to examples/ for some examples. These examples
  demonstrate how to build applications that use CRAVE as well as some core
  features of CRAVE as listed below:

  * ex1_seed_dist              : global seed and simple distribution.
  * ex2_constr_ref             : constraints and references.
  * ex3_inh_soft_next          : constraint inheritance, soft constraints and custom next().
  * ex4_constr_mng             : enable/disable constraints.
  * ex5_vec_constr             : vector constraints. 
  * ex6_inline_gen             : inline generator. 

to execute these examples look into the build/examples directory.
See also the test cases in crave/tests which cover all implemented features.

III) SystemC Support
  To for the build system to build and test the SystemC testcases you need to
  provide a SystemC config file for CMake. Place this file in your SystemC
  installation directory (check that the include and library path are correct).

  -----8<--------8<-----------------8<--------8<------------
  # SystemCConfig.cmake
  set(SystemC_VERSION 2.2.0)
  
  ## alternativ:
  # set(SystemC_DIRECTORY /path/to/systemC)
  get_filename_component(SystemC_DIRECTORY ${CMAKE_CURRENT_LIST_FILE} PATH)
  
  set(SystemC_INCLUDE_DIR  ${SystemC_DIRECTORY}/include )
  set(SystemC_INCLUDE_DIRS ${SystemC_INCLUDE_DIR} )
  set(SystemC_LIBRARIES    ${SystemC_DIRECTORY}/lib/libsystemc.a)
  -----8<--------8<-----------------8<--------8<------------

  and point cmake to your SystemC directory:

  cmake -DSystemC_DIR=/path/to/systemc build/

